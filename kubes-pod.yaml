spec:
  containers:
  - env:
    - name: "DOCKER_TLS_CERTDIR"
      value: "/certs"
    image: "docker:20.10-dind"
    imagePullPolicy: "Always"
    name: "dind"
    securityContext:
      privileged: true
      runAsUser: 0
    volumeMounts:
    - mountPath: "/certs/client"
      name: "docker-secrets"
      readOnly: false
      #    - mountPath: "/var/lib/docker"
      #      name: "docker-cache"
      #      readOnly: false
  - env:
    - name: "DOCKER_TLS_VERIFY"
      value: "1"
    - name: "DOCKER_HOST"
      value: "tcp://localhost:2376"
    - name: "DOCKER_CERT_PATH"
      value: "/certs/client"
    - name: "_JAVA_OPTIONS"
      value: "-Duser.home=/home/jenkins"
    - name: "JDKW_VERBOSE"
      value: "1"
    - name: "HOME"
      value: "/home/jenkins"
    image: "docker.arpnetworking.com/build-base"
    imagePullPolicy: "Always"
    name: "ubuntu"
    tty: true
    securityContext:
      runAsUser: 1000
    volumeMounts:
    - mountPath: "/cache"
      name: "build-cache"
      readOnly: false
    - mountPath: "/certs/client"
      name: "docker-secrets"
      readOnly: false
  volumes:
  - name: "docker-secrets"
    emptyDir:
      medium: "Memory"
  - name: "build-cache"
    persistentVolumeClaim:
      claimName: "jenkins-build-cache"
      readOnly: false
      #  - name: "docker-cache"
      #    persistentVolumeClaim:
      #      claimName: "jenkins-docker-cache"
      #      readOnly: false
