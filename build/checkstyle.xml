<?xml version="1.0"?>
<!--
  ~ Copyright 2014 Groupon.com
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

    - Auto Merch Standards 

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
    <!--
    <module name="JavadocPackage"/>
    -->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>
    
    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength"/>
    
    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter"/>

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="RegexpSingleline">
       <property name="format" value="\s+$"/>
       <property name="minimum" value="0"/>
       <property name="maximum" value="0"/>
       <property name="message" value="Line has trailing spaces."/>
    </module>

    <!-- Prevent Newline before } -->
    <module name="RegexpMultiline">
       <property name="format" value="^\n+\s*\}$"/>
       <property name="message" value="Please remove blank empty lines before closing }" />
    </module>

    <!-- module name="SuppressionFilter">
        <property name="file" value="${checkstyle-suppressions-file}"/>
    </module -->

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html 
        <module name="JavadocMethod"/>
        <module name="JavadocVariable"/>
        <module name="JavadocStyle"/>
        -->
        <module name="JavadocType">
            <property name="allowMissingParamTags" value="true"/>
            <property name="authorFormat" value="\S"/>
        </module>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName">
            <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$|^log$"/>
        </module>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for Headers                                -->
        <!-- See http://checkstyle.sf.net/config_header.html   -->
        <!-- <module name="Header">                            -->
            <!-- The follow property value demonstrates the ability     -->
            <!-- to have access to ANT properties. In this case it uses -->
            <!-- the ${basedir} property to allow Checkstyle to be run  -->
            <!-- from any directory within a project. See property      -->
            <!-- expansion,                                             -->
            <!-- http://checkstyle.sf.net/config.html#properties        -->
            <!-- <property                                              -->
            <!--     name="headerFile"                                  -->
            <!--     value="${basedir}/java.header"/>                   -->
        <!-- </module> -->

        <!-- Require javadoc header -->
        <module name="Regexp">
            <property name="format" value="^\/\*\*$\n^\s\*\s.+$\n(^\s\*.*$\n)*^\s\*\s\@author\s[-\w().@\s]+$\n(?:^\s\*\s@(?!since).*$\n)*^\s\*\s\@since\s.+$\n(^\s\*\s.+$\n)*^\s\*\/$\n"/>
            <property name="message" value="Javadoc header not correctly formatted. Please ensure the second line contains a description, optionally followed by more descriptive lines, then an @author line and a @since line, then additional doc lines and finally a closing \s*/" />
        </module>

        <!-- Prevent /** Text comments -->
        <module name="Regexp">
            <property name="format" value="\/\*\*\s*\w+"/>
            <property name="illegalPattern" value="true"/>
            <property name="message" value="Javadoc comments should start on the second line of the comment" />
        </module>

        <!-- Remove IntelliJ line in the header -->
        <module name="Regexp">
            <property name="format" value="Created (?:by|with) IntelliJ IDEA"/>
            <property name="illegalPattern" value="true"/>
            <property name="message" value="Please remove the Created by IntelliJ IDEA line from the header" />
        </module>
        <!-- <module name="RegexpHeader"/>                                -->

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <!--
        <module name="LineLength"/>
        <module name="MethodLength"/>
        <module name="ParameterNumber"/>
        -->

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap">
            <property name="option" value="eol"/>
        </module>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly">
            <property name="option" value="eol"/>
        </module>
        <module name="NeedBraces"/>
        <module name="RightCurly">
            <property name="option" value="same"/>
        </module>

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!--<module name="AvoidInlineConditionals"/>        -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
        </module>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <module name="RedundantThrows">
            <property name="suppressLoadErrors" value="true"/>
        </module>       
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!--
        <module name="DesignForExtension"/>
        <module name="VisibilityModifier"/>
        <module name="InterfaceIsType"/>
         -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>

        <module name="Regexp">
            <property name="id" value="SystemOutCheck"/>
            <property name="format" value="System.out.print"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Prefer the use of a logger rather than System.out.print to log data from code execution." />
        </module>
        <!--
        <module name="FinalParameters"/>
        -->
        <module name="TodoComment"/>
        <module name="UpperEll"/>
        <module name="ImportOrder">
            <property name="option" value="top"/>
            <property name="groups" value="/^javax?\./,*,com.arpnetworking"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
        </module>

        <module name="NPathComplexity"/>
        <module name="CyclomaticComplexity"/>
        <module name="Indentation"/>
        <module name="ModifiedControlVariable"/>
        <module name="StringLiteralEquality"/>
        <module name="UnnecessaryParentheses"/>
        <module name="FileContentsHolder"/>
    </module>

    <module name="SuppressionFilter">
        <property name="file" value="${suppressions.file}"/>
    </module>

    <module name="SuppressionCommentFilter">
        <property name="offCommentFormat" value="CS\.OFF\: ([\w|]+)"/>
        <property name="onCommentFormat" value="CS\.ON\: ([\w|]+)"/>
        <property name="checkFormat" value="$1"/>
    </module>
</module>
